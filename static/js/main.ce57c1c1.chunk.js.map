{"version":3,"sources":["mock_data/fakeAuth.js","context/auth-context.js","context/user-context.js","Pages/Home.js","Pages/About.js","Groups/ToolsList.js","Components/Input/Text.js","Components/Input/Checkbox.js","Helper/Tools.js","mock_data/fakeGroups.js","mock_data/fakeTools.js","Helper/Api.js","context/user-tools-context.js","context/user-groups-context.js","Groups/ToolsSearch.js","Pages/Search.js","Components/Button/Default.js","Pages/MyTools.js","Pages/MyGroups.js","Pages/Settings.js","App.js","context/index.js","serviceWorker.js","index.js"],"names":["User","AuthContext","React","createContext","AuthProvider","props","data","user","Provider","value","login","logout","register","UserContext","UserProvider","context","useContext","undefined","Error","useAuth","useUser","Home","About","ToolsList","tools","map","tool","key","_id","name","owner","TextInput","useState","type","Checkbox","text","onChange","checked","toString","Tools","filterToolsByKeyword","keyword","length","filter","nameMatches","filterToolsByGroups","groups","found","forEach","group","accessibleGroups","includes","dataString","regex","RegExp","test","fakeGroups","fakeTools","Api","getGroupsByIds","arrOfGroupIds","getToolsByGroupIds","UserToolsContext","UserToolsProvider","groupBelong","setTools","addTool","console","log","item","Math","random","toFixed","removeTool","toolId","useUserTools","UserGroupsContext","UserGroupsProvider","userGroups","GroupsBelong","useUserGroups","ToolsSearch","userTools","groupsInitialState","textInput","setTextInput","setGroups","handleCheckboxChange","e","nextGroupsState","nextGroup","Object","assign","target","checkedGroupsArray","each","groupsList","id","JSON","stringify","onSubmit","preventDefault","Text","data-testid","placeholder","newValue","autoFocus","Search","ButtonDefault","MyTools","newToolInitialState","note","newTool","setNewTool","handleInputChange","newState","index","indexOf","push","splice","handleRemoveTool","toolName","innerText","confirmText","window","confirm","toolToDelete","onClick","MyGroups","Settings","App","className","to","path","AppProviders","children","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce57c1c1.chunk.js","sourcesContent":["const User = {\n    \"_id\": \"123\",\n    \"name\": \"John\",\n    \"ownTool\": [\"1\", \"2\", \"3\"],\n    \"groupBelong\": [\"9\", \"8\", \"7\"]\n}\n\nexport default User;\n","import User from '../mock_data/fakeAuth';\nimport React from 'react';\n\nconst AuthContext = React.createContext();\n\nconst AuthProvider = (props) => {\n\tconst data = {user: User};\n\tconst login = () => {}\n\tconst logout = () => {}\n\tconst register = () => {}\n\n\treturn (\n\t\t<AuthContext.Provider value={{data, login, logout, register}} {...props}/>\n\t);\n}\n\nconst useAuth = () => {\n\tconst context = React.useContext(AuthContext);\n\tif (context === undefined) {\n\t\tthrow new Error('useAuth must be used within a AuthProvider');\n\t}\n\treturn context;\n}\n\nexport {AuthProvider, useAuth};\n","import React from 'react';\nimport {useAuth} from './auth-context';\n\nconst UserContext = React.createContext();\n\nconst UserProvider = (props) => {\n\tconst { data: {user} } = useAuth();\n\treturn <UserContext.Provider value={user} {...props} />\n}\n\nconst useUser = () => {\n\tconst context = React.useContext(UserContext)\n\tif (context === undefined) {\n\t\tthrow new Error('useUser must be used within a UserProvider');\n\t}\n\treturn context\n}\n\nexport {UserProvider, useUser};\n","import React from 'react';\n\nfunction Home() {\n\treturn (\n\t\t<h2>Home</h2>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction About() {\n\treturn (\n\t\t<h2>About</h2>\n\t);\n}\n\nexport default About;\n","import React from 'react';\n\nconst ToolsList = ({tools}) => {\n\treturn (\n\t\ttools.map(tool => {\n\t\t\treturn <li key={tool._id}>{tool.name} ({tool.owner.name})</li> \n\t\t})\n\t);\n}\n\nexport default ToolsList;\n","import React, { useState } from 'react';\n\nconst TextInput = (props) => {\n\tconst [ input ] = useState('');\n\treturn (\n\t\t<input type=\"text\" {...props} />\n\t);\n}\n\nexport default TextInput;\n","import React from 'react';\n\nconst Checkbox = ({value, text, onChange, checked}) => {\n\treturn (\n\t\t<div>\n\t\t\t<label>\n\t\t\t<input \n\t\t\t\ttype='checkbox' \n\t\t\t\tvalue={value} \n\t\t\t\tonChange={onChange}\n\t\t\t\tchecked={checked}\n\t\t\t/>\n\t\t\t\t{text.toString()}\n\t\t\t</label>\n\t\t</div>\n\t);\n};\n\nexport default Checkbox;\n","const Tools = {\n\tfilterToolsByKeyword: (keyword, tools) => {\n\t\tif (typeof tools !== 'object') { return undefined; }\n\t\tif (tools.length < 1) { return undefined; }\n\t\treturn keyword.length > 0 ?\n\t\t\ttools.filter(tool => {\n\t\t\t\treturn nameMatches(keyword, tool.name);\n\t\t\t})\n\t\t:\n\t\t\ttools\n\t},\n\tfilterToolsByGroups: (groups, tools) => {\n\t\tlet filteredTools = tools.filter(tool => {\n\t\t\tlet found = false;\n\t\t\tgroups.forEach(group => {\n\t\t\t\tif (tool.accessibleGroups.includes(group)) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn found;\n\t\t});\n\t\treturn filteredTools;\n\t}\n};\n\nexport default Tools;\n\nconst nameMatches = (keyword, dataString) => {\n\tlet regex = new RegExp(keyword);\n\treturn keyword.length > 0 ?\n\t\tregex.test(dataString)\n\t:\n\t\tfalse\n};\n\n","const fakeGroups = [\n\t{\n\t    \"_id\": \"7\",\n\t    \"name\": \"ftech friends\",\n\t    \"members\": [\"123\"],\n\t    \"toolList\": [\"1\", \"2\", \"3\"]\n\t},\n\t{\n\t    \"_id\": \"8\",\n\t    \"name\": \"group 2\",\n\t    \"members\": [\"124\"],\n\t    \"toolList\": [\"3\", \"4\", \"5\"]\n\t},\n\t{\n\t    \"_id\": \"9\",\n\t    \"name\": \"group 3\",\n\t    \"members\": [\"123\", \"124\"],\n\t    \"toolList\": [\"1\", \"2\", \"5\"]\n\t}\n]\n\nexport default fakeGroups;\n","const fakeTools = [{\n    \"_id\": \"1\",\n    \"name\": \"hammer\",\n    \"owner\": {\n\t    _id: \"124\",\n\t    name: 'John'\n    },\n    \"accessibleGroups\": [\"9\", \"7\"],\n    \"note\": \"hit the nail on the head\"\n}, {\n    \"_id\": \"2\",\n    \"name\": \"aerator\",\n    \"owner\": {\n\t    _id: \"125\",\n\t    name: 'Matt'\n    },\n    \"accessibleGroups\": [\"9\"],\n    \"note\": \"put holes in ground\"\n}, {\n    \"_id\": \"3\",\n    \"name\": \"powerwash\",\n    \"owner\": {\n\t    _id: \"126\",\n\t    name: 'Steve'\n    },\n    \"accessibleGroups\": [\"8\", \"7\"],\n    \"note\": \"water sold separated\"\n}];\n\nexport default fakeTools;\n\n\n","import fakeGroups from '../mock_data/fakeGroups'\nimport fakeTools from '../mock_data/fakeTools'\n\nconst Api = {\n\n\tgetGroupsByIds: (arrOfGroupIds) => {\n\t\treturn fakeGroups;\n\t},\n\tgetToolsByGroupIds: (arrOfGroupIds) => {\n\t\treturn fakeTools;\n\t}\n\n\n}\n\nexport default Api;\n","import React, {useState} from 'react';\nimport {useUser} from './user-context';\nimport Api from '../Helper/Api';\n\nconst UserToolsContext = React.createContext();\n\nconst UserToolsProvider = (props) => {\n\tconst user = useUser();\n\tconst [tools, setTools] = useState(Api.getToolsByGroupIds(user.groupBelong));\n\tconst addTool = (tool) => {\n\t\t// requirements\n\t\t// - must have name\n\t\t// - no duplicate names\n\t\t// - assign an id\n\t\tif (tool.name.length < 1) { \n\t\t\tconsole.log('New tool name must be assigned');\n\t\t\treturn;\n\t\t} \n\t\tconst arr = tools.filter(item => {\n\t\t\treturn item.name === tool.name;\n\t\t});\n\t\tif (arr.length > 0) {\n\t\t\tconsole.log('Tool name already exists');\n\t\t\treturn;\n\t\t}\n\t\t// temp method for setting id... will eventually get assigned in backend\n\t\ttool._id = (Math.random() * 1000).toFixed(0) ;\n\t\tsetTools([...tools, tool]);\n\t}\n\tconst removeTool = (toolId) => {\n\t\tconsole.log('removeTool', toolId);\n\t\tsetTools(tools.filter(tool => {\n\t\t\treturn tool._id !== toolId;\n\t\t}));\n\t}\n\treturn <UserToolsContext.Provider value={{\n\t\tdata: tools,\n\t\taddTool: addTool,\n\t\tremoveTool: removeTool\n\t}} {...props} />\n}\n\nconst useUserTools = () => {\n\tconst context = React.useContext(UserToolsContext)\n\tif (context === undefined) {\n\t\tthrow new Error('useUserTools must be used within a UserToolsProvider');\n\t}\n\treturn context\n}\n\nexport {UserToolsProvider, useUserTools};\n","import React from 'react';\nimport {useUser} from './user-context';\nimport Api from '../Helper/Api';\n\nconst UserGroupsContext = React.createContext();\n\nconst UserGroupsProvider = (props) => {\n\tconst user = useUser();\n\tconst userGroups = Api.getGroupsByIds(user.GroupsBelong); \n\treturn <UserGroupsContext.Provider value={userGroups} {...props} />\n}\n\nconst useUserGroups = () => {\n\tconst context = React.useContext(UserGroupsContext)\n\tif (context === undefined) {\n\t\tthrow new Error('useUserGroups must be used within a UserGroupsProvider');\n\t}\n\treturn context\n}\n\nexport {UserGroupsProvider, useUserGroups};\n","import React, { useState } from 'react';\nimport ToolsList from './ToolsList';\nimport TextInput from '../Components/Input/Text';\nimport Checkbox from '../Components/Input/Checkbox';\nimport Tools from '../Helper/Tools';\n\nimport {useUserTools} from '../context/user-tools-context';\nimport {useUserGroups} from '../context/user-groups-context';\n\n// Move these into the API helper\nconst getCheckedGroupsArray = (groupsState) => {\n\tconst onlyChecked = groupsState.filter(each => {\n\t\treturn each.checked;\n\t});\n\treturn onlyChecked.map(each => { return  each.data._id });\n};\n\nconst ToolsSearch = () => {\n\tconst userTools = useUserTools().data;\n\tconst userGroups = useUserGroups();\n\n\tconst placeholder = 'Type in a tool name';\n\tconst initialTextInput = '';\n\tconst groupsInitialState = userGroups.map(group => {\n\t\treturn {\n\t\t\tdata: group,\n\t\t\tchecked: true\n\t\t};\n\t});\n\n\tconst [ textInput, setTextInput ] = useState(initialTextInput);\n\tconst [ tools, setTools ] = useState(userTools);\n\tconst [ groups, setGroups ] = useState(groupsInitialState);\t\n\n\tconst handleInputChange = (e) => {\n\t\tconst newValue = e.target.value;\n\t\tsetTextInput(newValue);\n\t\tsetTools(Tools.filterToolsByKeyword(newValue, userTools));\n\t};\n\tconst handleCheckboxChange = (e) => {\n\t\tlet nextGroupsState = groups.map(group => {\n\t\t\tlet nextGroup = Object.assign({}, group);\n\t\t\tif (group.data._id.toString() === e.target.value) {\n\t\t\t\tnextGroup.checked = e.target.checked;\n\t\t\t}\n\t\t\treturn nextGroup;\n\t\t});\n\t\tsetGroups(nextGroupsState);\n\t\tlet checkedGroupsArray = getCheckedGroupsArray(nextGroupsState);\n\t\tsetTools(Tools.filterToolsByGroups(checkedGroupsArray,  userTools)); \n\t};\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t};\n\tconst groupsList = groups.map(group => {\n\t\treturn (\n\t\t\t<li key={group.data._id}>\n\t\t\t\t<Checkbox \n\t\t\t\t\tvalue={group.data._id} \n\t\t\t\t\ttext={group.data.name} \n\t\t\t\t\tonChange={handleCheckboxChange}\n\t\t\t\t\tchecked={group.checked}\n\t\t\t\t/>\n\t\t\t</li>\n\t\t);\n\t});\n\treturn (\n\t\t<div id='tool-search'>\n\t\t\t<p>{JSON.stringify(userTools)}</p>\n\t\t\t<p>{JSON.stringify(userGroups)}</p>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<TextInput \n\t\t\t\t\tdata-testid='search-input'\n\t\t\t\t\tid='search' \n\t\t\t\t\tname='search-input' \n\t\t\t\t\tplaceholder={placeholder} \n\t\t\t\t\tvalue={textInput} \n\t\t\t\t\tonChange={handleInputChange} \n\t\t\t\t\tautoFocus={true}\n\t\t\t\t/>\n\t\t\t\t<h3>My Groups:</h3>\n\t\t\t\t<ul>{ groups.length > 0 ? groupsList : <li>No Groups!</li> }</ul>\n\t\t\t</form>\n\t\t\t<div>\n\t\t\t\t<h3>Search Results:</h3>\n\t\t\t\t<ul>{ tools && tools.length > 0 ? <ToolsList tools={tools} /> : <li>No Matches!</li> }</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ToolsSearch;\n","import React from 'react';\nimport ToolsSearch from '../Groups/ToolsSearch';\n\nfunction Search() {\n\treturn (\n\t\t<div>\n\t\t\t<h2>Search</h2>\n\t\t\t<ToolsSearch />\n\t\t</div>\n\t);\n}\n\nexport default Search;\n","import React from 'react';\n\nconst ButtonDefault = (props) => {\n\treturn <button {...props} >{props.value}</button>\n}\n\nexport default ButtonDefault;\n","import React, {useState} from 'react';\nimport {useUser} from '../context/user-context';\nimport {useUserTools} from '../context/user-tools-context';\nimport {useUserGroups} from '../context/user-groups-context';\nimport TextInput from '../Components/Input/Text';\nimport Checkbox from '../Components/Input/Checkbox';\nimport ButtonDefault from '../Components/Button/Default';\n\nfunction MyTools() {\n\tconst {data, addTool, removeTool} = useUserTools();\n\tconst tools = data;\n\tconst user = useUser();\n\tconst groups = useUserGroups();\n\tconst newToolInitialState = {\n\t\t_id: '',\n\t\tname: '',\n\t\towner: {_id: user._id, name: user.name},\n\t\taccessibleGroups: user.groupBelong, \n\t\tnote: ''\n\t}\n\tconst [newTool, setNewTool] = useState(newToolInitialState);\n\tconst handleInputChange = (e) => {\n\t\tlet newState = Object.assign({}, newTool);\n\t\tnewState[e.target.name] = e.target.value;\n\t\tsetNewTool(newState);\n\t}\n\tconst handleCheckboxChange = (e) => {\n\t\tlet newGroups = [...newTool.accessibleGroups];\n\t\tlet index = newGroups.indexOf(e.target.value);\n\t\tif (e.target.checked) {\n\t\t\tif (index >= 0) { console.log('already exists') }\n\t\t\telse { \n\t\t\t\tlet newState = Object.assign({}, newTool);\n\t\t\t\tnewState.accessibleGroups.push(e.target.value);\n\t\t\t\tsetNewTool(newState);\n\t\t\t} \n\t\t} else {\n\t\t\tif (index >= 0) {\n\t\t\t\tlet newState = Object.assign({}, newTool);\n\t\t\t\tnewState.accessibleGroups.splice(index, 1);\n\t\t\t\tsetNewTool(newState);\n\t\t\t} else {\n\t\t\t\tconsole.log('group id not found');\n\t\t\t}\n\t\t}\n\t}\n\tconst shouldGroupBeChecked = (id) => {\n\t\tif (newTool.accessibleGroups.indexOf(id) >= 0) { return true }\n\t\treturn false;\n\t}\n\tconst handleSubmitNewTool = (e) => {\n\t\te.preventDefault();\n\t\taddTool(newTool);\n\t\tsetNewTool(newToolInitialState);\n\t}\n\tconst handleRemoveTool = (e) => {\n\t\tconst toolName = e.target.innerText;\n\t\tconst confirmText = `Are you sure you want to delete ${toolName}?`\n\t\tif (window.confirm(confirmText)) {\n\t\t\tconst toolToDelete = tools.filter(tool => {\n\t\t\t\treturn tool.name === toolName;\n\t\t\t});\n\t\t\tif (toolToDelete.length === 1) {\n\t\t\t\tremoveTool(toolToDelete[0]._id);\n\t\t\t} else if (toolToDelete.length < 0) {\n\t\t\t\tconsole.log('Remove Tool: no entries found');\n\t\t\t} else {\n\t\t\t\tconsole.log('Remove Tool: more than one entries found');\n\t\t\t}\n\t\t}\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h2>My Tools</h2>\n\t\t\t<ul>\n\t\t\t{\n\t\t\t\ttools.map(tool => {\n\t\t\t\t\treturn <li key={tool._id}>{tool.name}</li>\n\t\t\t\t})\n\t\t\t}\n\t\t\t</ul>\n\t\t\t<h2>Add a new Tool</h2>\n\t\t\t<form onSubmit={handleSubmitNewTool}>\n\t\t\t\t<TextInput placeholder='Name' name='name' value={newTool.name} onChange={handleInputChange} />\t\n\t\t\t\t<TextInput placeholder='Note' name='note' value={newTool.note} onChange={handleInputChange} />\t\n\t\t\t\t<ul>\n\t\t\t\t\t{ groups.map(group => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Checkbox \n\t\t\t\t\t\t\t\tkey={group._id}\n\t\t\t\t\t\t\t\tvalue={group._id} \n\t\t\t\t\t\t\t\ttext={group.name} \n\t\t\t\t\t\t\t\tonChange={handleCheckboxChange}\n\t\t\t\t\t\t\t\tchecked={shouldGroupBeChecked(group._id)}\n\t\t\t\t\t\t\t/>\t\t\n\t\t\t\t\t\t);\n\t\t\t\t\t}) }\n\t\t\t\t</ul>\n\t\t\t\t<ButtonDefault value='Add a Tool' type='submit' />\n\t\t\t</form>\n\t\t\t<h2>Delete a Tool</h2>\n\t\t\t<ul>\n\t\t\t\t{tools.map(tool => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={tool._id} onClick={handleRemoveTool}>{tool.name}</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default MyTools;\n","import React from 'react';\nimport {useUserGroups} from '../context/user-groups-context';\n\nfunction MyGroups() {\n\tconst groups = useUserGroups();\n\treturn (\n\t\t<div>\n\t\t\t<h2>My Groups</h2>\n\t\t\t<p>{JSON.stringify(groups)}</p>\n\t\t\t<ul>\n\t\t\t{\n\t\t\t\tgroups.map(group => {\n\t\t\t\t\treturn <li key={group._id}>{group.name}</li>\n\t\t\t\t})\n\t\t\t}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default MyGroups;\n","import React from 'react';\n\nfunction Settings() {\n\treturn (\n\t\t<h2>Settings</h2>\n\t);\n}\n\nexport default Settings;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useUser } from './context/user-context';\n\nimport Home from './Pages/Home.js';\nimport About from './Pages/About.js';\nimport Search from './Pages/Search.js';\nimport MyTools from './Pages/MyTools.js';\nimport MyGroups from './Pages/MyGroups.js';\nimport Settings from './Pages/Settings.js';\n\nfunction App() {\n  const user = useUser();\n  return (\n\t<Router>\n\t        <div>\n\t  \t  <h1>Tools Sharing App</h1>\n\t          <nav>\n\t            <ul className=\"nav-links\">\n\t              <li>\n\t                <Link to=\"/\">Home</Link>\n\t              </li>\n\t  \t      <li>\n\t  \t\t<Link to=\"/about\">About</Link>\n\t  \t      </li>\n\t\t      <li>\n\t                <Link to=\"/search\">Search</Link>\n\t              </li>\n\t  \t      <li>\n\t                <Link to=\"/my-tools\">My Tools</Link>\n\t              </li>\n\t\t      <li>\n\t                <Link to=\"/my-groups\">My Groups</Link>\n\t              </li>\n\t  \t      <li>\n\t  \t\t<Link to=\"/settings\">Settings</Link>\n\t  \t      </li>\n\t            </ul>\n\t          </nav>\n\t          <h2>User Info</h2>\n\t  \t  <p>{JSON.stringify(user)}</p>\n\t  \t  <Switch>\n\t  \t    <Route path=\"/about\">\n\t  \t      <About />\n\t  \t    </Route>\n\t            <Route path=\"/search\">\n\t  \t      <Search user={user}/>\n\t  \t    </Route>\n\t  \t    <Route path=\"/my-tools\">\n\t  \t      <MyTools />\n\t  \t    </Route>\n\t  \t    <Route path=\"/my-groups\">\n\t  \t      <MyGroups />\n\t  \t    </Route>\n\t  \t    <Route path=\"/settings\">\n\t  \t      <Settings />\n\t  \t    </Route>\n\t            <Route path=\"/\">\n\t              <Home />\n\t            </Route>\n\t          </Switch>\n\t        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {AuthProvider} from './auth-context';\nimport {UserProvider} from './user-context';\nimport {UserToolsProvider} from './user-tools-context';\nimport {UserGroupsProvider} from './user-groups-context';\n\nconst AppProviders = ({children}) => {\n\treturn (\n\t\t<AuthProvider>\n\t\t\t<UserProvider>\n\t\t\t\t<UserToolsProvider>\n\t\t\t\t\t<UserGroupsProvider>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</UserGroupsProvider>\n\t\t\t\t</UserToolsProvider>\n\t\t\t</UserProvider>\n\t\t</AuthProvider>\n\t);\n}\n\nexport default AppProviders;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AppProviders from './context';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<AppProviders>\n\t\t<App />\n\t</AppProviders>, \n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}